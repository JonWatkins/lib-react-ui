@use "sass:color";

$primary: #626ED4;
$secondary: #343549;
$success: #2AA39A;
$danger: #EC4561;
$warning: #F8B425;
$info: #38A5F8;
$lightest: #F8F8FA;
$light: lighten(#575C62, 50%);
$lightDark: lighten(#575C62, 35%);
$dark: #575C62;
$muted: #EDECF1;
$white: white;

$theme-colors: (
  "primary": $primary,
  "secondary": $secondary,
  "success": $success,
  "danger": $danger,
  "warning": $warning,
  "info": $info,
  "lightest": $lightest,
  "light": $light,
  "dark": $dark,
  "muted": $muted,
);

$palette : (
  100 : 40%,
  200 : 30%,
  300 : 20%,
  400 : 10%,
  500 : 0,
  600 : 10%,
  700 : 20%,
  800 : 30%,
  900 : 40%
);

$opacities: (
  "100": 100%,
  "75": -25%,
  "50": -50%,
  "25": -75%,
);

@mixin colorPalette($propertyName) {
  &-white {
    #{$propertyName}: $white;
  }

  @each $opacticy, $alpha in $opacities {
    &-white\/#{$opacticy} {
      #{$propertyName}: color.scale($white, $alpha: $alpha);
    }
  }

  @each $name, $color in $theme-colors {
    &-#{$name} {
      #{$propertyName}: $color;
    }

    @each $opacticy, $alpha in $opacities {
      &-#{$name}\/#{$opacticy} {
        #{$propertyName}: color.scale($color, $alpha: $alpha);
      }
    }

    @each $weight, $percent in $palette {
      @if $weight < 500 {
        &-#{$name}-#{$weight} {
          #{$propertyName}: lighten($color, $percent);
        }
      } @else if $weight > 500 {
        &-#{$name}-#{$weight} {
          #{$propertyName}: darken($color, $percent);
        }      
      } @else {
        &-#{$name}-#{$weight} {
          #{$propertyName}: $color;
        }        
      }

      @each $opacticy, $alpha in $opacities {
        @if $weight < 500 {
          &-#{$name}-#{$weight}\/#{$opacticy} {
            #{$propertyName}: color.scale(lighten($color, $percent), $alpha: $alpha);
          }
        } @else if $weight > 500 {
          &-#{$name}-#{$weight}\/#{$opacticy} {
            #{$propertyName}: color.scale(darken($color, $percent), $alpha: $alpha);
          }      
        } @else {
          &-#{$name}-#{$weight}\/#{$opacticy} {
            #{$propertyName}: color.scale($color, $alpha: $alpha);
          }        
        }
      }    
    }
  }
}

.bg {
  @include colorPalette(background-color)
}

.text {
  @include colorPalette(color)
}

.border {
  @include colorPalette(border-color)
}

.link {
  @include colorPalette(color)
}
